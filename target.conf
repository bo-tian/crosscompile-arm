#!/bin/sh

TRIPLE=arm-linux-gnueabihf # ARM with hardfloat eabi
MARCH=armv7-a # or armv8-a
MCPU=generic	# compitable to all CPU of the armv7-a series.
MCPU=cortex-a15

ARM="-target ${TRIPLE} -march=${MARCH} -mcpu=${MCPU}"

LINUX="linux-2.6.36" # compitable to most embedded systems

CC="clang -v -O3"
CXX="${CC}"
AR="llvm-ar"
RANLIB="llvm-ranlib"

# location of current file
DIR=`dirname "$(readlink -f "$0")"`
REPO=${DIR}/repo
SYSROOT=${DIR}/sdk/${MCPU}/sysroot
TARGET=${DIR}/sdk/${MCPU}/target
BUILD=${DIR}/build_dir

REPO=/home/repo

CFLAGS="${ARM} --sysroot=${SYSROOT} -rtlib=compiler-rt -isystem ${SYSROOT}/${LINUX}/include"
CXXFLAGS="${CFLAGS} -nostdinc++ -stdlib=libc++ -isystem ${SYSROOT}/usr/include/c++"

COMPACT_LIB="-ffunction-sections -fdata-sections -Wl,--gc-sections"

# check llvm is ready
test=`which clang`
if [ "$?" != "0" ]; then
	echo ---- llvm/clang not found ----
	echo ---- Please install llvm/clang ----
	echo ---- pacman -Sy llvm llvm-libs clang lld ----
	exit 1
fi

# check ld is ready
test=`which lld && ld -v | grep LLD`
if [ "$?" != "0" ]; then
	echo ----
	echo Please replace ld with lld. For example, "\"cp -v ld ld.origin; cp -v ld.lld ld\""
	echo ----
	exit 1
fi

# check compiler-rt is ready
test=`clang ${CFLAGS} -print-libgcc-file-name`
if [ ! -f "${test}" ]; then
	echo ---- compiler-rt is absent ----
	echo ---- Please build compiler-rt first, then copy that library to ${test} ----
	echo ---- Continue ----
fi

if [ ! -d ${REPO} ]; then
	echo ---- Create directory REPO:${REPO} where the source code are placed. ----
	mkdir -pv ${REPO}
fi

if [ ! -d ${BUILD} ]; then
	echo ---- Create directory BUILD:${BUILD} where the source code are compiled ----
	mkdir -pv ${BUILD}
fi

if [ ! -d ${SYSROOT} ]; then
	echo ---- Create directory SYSROOT:${SYSROOT} where static libraries and include header files are placed ----
	mkdir -pv ${SYSROOT}/include ${SYSROOT}/usr/include ${SYSROOT}/lib
	echo ---- compiler-rt needs libc include files ----
	cp -r "${DIR}/bootstrap/${MARCH}/include" "${SYSROOT}"
	echo ---- Linux include files ----
	cp -r "${DIR}/bootstrap/${LINUX}" "${SYSROOT}"
fi

if [ ! -d ${TARGET} ]; then
	echo ---- Create directory TARGET: ${TARGET} where shared libraries and binaries are placed ----
	mkdir -pv ${TARGET}/lib ${TARGET}/bin
fi

