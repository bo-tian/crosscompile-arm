#!/bin/sh

# armv7-a -mfloat-abi=hard: the general architecture of armv7-a with hard float ABI, using FPU unit
#   exclusively and fully optimistised, while not compatible with those not using fpu unit binaries.
# armv7-a -mfloat-abi=softfp: the general architecture of armv7-a with soft float ABI, using FPU
#   unit while keeping compatible with those not using fpu unit binaries.
# armv7-a -mfloat-abi=soft: the general architecture of armv7-a with soft float ABI, not using FPU
#   unit at all.
# vfpv4: FPU unit version 4, all armv7-a cortex-a9 or newer CPU with FPU unit should already support
#   this.  
# neon: FPU unit vector extension, all armv7-a cortex-a9 or newer CPU with FPU unit should already
#   support this.
ARCH=armv7ahf

# location of this file
DIR=`dirname "$(readlink -f "$0")"`

REPO=${DIR}/repo
SYSROOT=${DIR}/sdk/${ARCH}/sysroot
BOOTSTRAP=${DIR}/sdk/${ARCH}/bootstrap
TARGET=${DIR}/sdk/${ARCH}/target
BUILD=${DIR}/build_dir

REPO=/home/repo
SYSROOT=/home/sdk/${ARCH}/sysroot
BOOTSTRAP=/home/sdk/${ARCH}/bootstrap
TARGET=/home/sdk/${ARCH}/target
BUILD=${DIR}/build_dir

# target parameters
TRIPLE="armv7a-linux-gnueabihf"
LINUX="linux-2.6.36"
CC="clang"
CXX="clang++"
AR="llvm-ar"
RANLIB="llvm-ranlib"

# builtin and libc++ depend on cross compiled libc and libc++ respectively, so we should supply thoses in the BOOTSTRAP directory.
if [ -z "${USE_BOOTSTRAP}" ]; then
CFLAGS="-v -Oz -target ${TRIPLE} -mfpu=neon-vfpv4 --sysroot=${SYSROOT} -rtlib=compiler-rt -isystem ${SYSROOT}/${LINUX}/include"
CXXFLAGS="${CFLAGS} -nostdinc++ -stdlib=libc++ -isystem ${SYSROOT}/usr/include/c++"
else
CFLAGS="-v -Oz -target ${TRIPLE} -mfpu=neon-vfpv4 --sysroot=${BOOTSTRAP} -rtlib=compiler-rt -isystem ${BOOTSTRAP}/${LINUX}/include"
# llvm libc++ depend on bootstrap libc++/libunwind library, while not using the c++ header files
CXXFLAGS="${CFLAGS} -nostdinc++ -stdlib=libc++"
fi

if [ ! -d ${REPO} ]; then
mkdir -pv ${REPO}
fi
if [ ! -d ${BUILD} ]; then
mkdir -pv ${BUILD}
fi
if [ ! -d ${SYSROOT}/lib ]; then
mkdir -pv ${SYSROOT}/lib
fi
if [ ! -d ${SYSROOT}/include ]; then
mkdir -pv ${SYSROOT}/include
fi
if [ ! -d ${SYSROOT}/usr/include ]; then
mkdir -pv ${SYSROOT}/usr/include
fi
if [ ! -d ${SYSROOT}/lib ]; then
mkdir -pv ${TARGET}/lib
fi
if [ ! -d ${SYSROOT}/bin ]; then
mkdir -pv ${TARGET}/bin
fi

